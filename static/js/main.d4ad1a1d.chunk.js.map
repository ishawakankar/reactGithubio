{"version":3,"sources":["logo.svg","config/keys.js","App.js","components/Navbar.js","components/Search.js","components/Cards.js","components/Graph.js","components/App.js","components/Login.js","router/AppRouter.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","Navbar","react_default","a","createElement","Menu","inverted","Item","Image","size","src","verticalAlign","this","props","credits","position","sessionStorage","getItem","avatar","React","Search","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","filters","text","value","Segment","style","margin","display","flexDirection","alignItems","padding","Header","Grid","columns","Row","Input","focus","placeholder","width","onChange","handleInputChange","justifyContent","Dropdown","multiple","selection","options","border","handleFilters","Button","positive","onClick","handleSearch","Cards","componentDidMount","localStorage","clear","console","log","query","handleRate","e","_ref","id","rating","setItem","results","feedback","_this2","paddingTop","paddingLeft","Card","Group","marginTop","map","x","i","key","Content","Meta","Description","extra","Rating","icon","maxRating","onRate","_ref2","primary","floated","handleSubmit","performance","height","App","event","setState","input","target","length","bind","assertThisInitialized","components_Navbar","components_Search","components_Cards","Graph","Login","onSignIn","response","profileObj","name","imageUrl","redirect","Redirect","to","google_login_default","clientId","clientID","buttonText","onSuccess","onFailure","AppRouter","HashRouter","Switch","Route","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","router_AppRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d4ad1a1d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nvar clientID = '325576232110-81uh4dg874dmoitmaq7fi2de0muvpi30.apps.googleusercontent.com';\n\nmodule.exports = clientID; ","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Image, Menu } from 'semantic-ui-react';\n\n\nclass Navbar extends React.Component {\n\n  render() {  \n    return (\n        <Menu inverted>\n          <Menu.Item >\n            <Image size=\"mini\" \n              src=\"https://cdn2.iconfinder.com/data/icons/world-currencies-gold/512/indian_rupee_sign_currency_gold_symbol-512.png\" \n              verticalAlign='middle' />\n            <span>{(this.props.credits==null)?0:this.props.credits}</span>\n          </Menu.Item>\n          <Menu.Item position='right'>\n            <Image size=\"mini\" src={sessionStorage.getItem(\"userProfileImage\")} avatar />\n          </Menu.Item>\n          \n        </Menu>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport { Input, Button, Dropdown, Segment, Grid, Header } from 'semantic-ui-react';\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        filters: [\n            {text: 'Most relevant', value: 'Most relevant'},\n            {text: 'Highly Approved', value: 'Highly Approved'},\n            {text: 'All', value: 'All'}\n         ]\n    };\n  }\n\n  render() {\n    return (\n        <Segment style={{margin: '10px', display: 'flex', flexDirection: 'column', alignItems: 'center', padding: '20px'}}>\n            <Header>\n                Search\n            </Header>\n            <Grid columns='2'>\n                <Grid.Row >\n                    <Input focus placeholder='Search' style={{width: '100%'}} onChange={this.props.handleInputChange} />\n                </Grid.Row>\n                <Grid.Row style={{display : 'flex', flexDirection: 'row', justifyContent: 'center'}}>\n                    <Dropdown placeholder='Filters' multiple selection options={this.state.filters} style={{ border: '1px solid #51A7E8', width: '100%'}} onChange={this.props.handleFilters} />\n                </Grid.Row>\n                <Grid.Row style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\n                    <Button positive onClick={this.props.handleSearch}>Search</Button>\n                </Grid.Row>\n            </Grid>\n        </Segment>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport { Card, Button, Image, Header, Rating } from 'semantic-ui-react';\n\nclass Cards extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: ['Title1', 'Title2', 'Title3'],\n      feedback: [],\n    };\n  }\n\n  componentDidMount = () => {\n    localStorage.clear();\n    //Make fetch call to search api\n    console.log('Search api');\n    console.log('query in cards =>', this.props.query);\n    console.log('filters in cards =>', this.props.filters);\n  }\n\n  handleRate = (e, { rating }, id) => {\n    localStorage.setItem(id,rating)\n    console.log('card id is',id,\"the card rating is\", localStorage.getItem(id));\n  }\n\n  render() {\n    return (\n      <div style={{margin: '10px'}}>\n        <Header style={{paddingTop: '20px', paddingLeft: '20px'}}>  \n          Recommended:\n        </Header>\n        <Card.Group style={{marginTop: '10px', display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\n          {this.state.results.map((x, i) =>\n            <Card key={i}>\n              <Card.Content>\n                <Card.Header>{x}</Card.Header>\n                <Card.Meta>Friends of Elliot</Card.Meta>\n                <Image src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQmusVyHLSxuIdiEyhcIKOM5qJ_VsMnMwx3VTwcf6j2QV5YGrpzMg' style={{width: '100%'}}/>\n                <Card.Description>\n                  Steve wants to add you to the group <strong>best friends</strong>\n                </Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                <div >\n                  <Rating icon='star' maxRating={5} onRate={(e,{rating}) => this.handleRate(e,{rating},i)} />\n                </div>\n              </Card.Content>\n            </Card>\n          )}\n        </Card.Group>\n        <br />\n        <Button primary floated='right' onClick={this.props.handleSubmit}> Submit </Button>\n        <br /> \n      </div>\n    );\n  }\n}\n\nexport default Cards;\n","import React from 'react';\nimport { Segment } from 'semantic-ui-react';\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      performance: [],\n    };\n  }\n\n  componentDidMount() {\n    //Fetch Graph Stats\n  }\n\n  render() {  \n    return (\n        <div style={{marginTop: '30px'}}>\n          <Segment style={{margin: '10px', display: 'flex', flexDirection: 'column', alignItems: 'center', padding: '20px'}}>\n            <h3>\n                Performance:\n            </h3>\n            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRAdHuTr4a-jrZJxMEUMaa4L7IR4etN_c5glgbsxBd50NHze9iG' style={{height:'30%',width: '70%', marginTop: '20px'}}/>\n            </Segment>\n        </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport Navbar from './Navbar';\nimport Search from './Search';\nimport Cards from './Cards';\nimport Graph from './Graph';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          query: '',\n          input: '',\n          filters: [],\n          credits: sessionStorage.getItem('credits'),\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleFilters = this.handleFilters.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n    handleInputChange = (event) => {\n        this.setState({\n            input: event.target.value,\n        })\n    }\n    \n    handleSearch = () => {\n        this.setState({\n          query: this.state.input,\n        })\n    }\n\n    handleFilters = (event, {value}) => {\n        this.setState({\n            filters: value,\n        })\n    }\n\n    handleSubmit = () => {\n      console.log('Submitted')\n      this.setState({\n        query: '',\n      })\n      var credits= sessionStorage.getItem('credits')\n      sessionStorage.setItem('credits', credits+localStorage.length)\n      localStorage.clear();\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar credits={this.state.credits} />\n                <div style={{marginTop: '30px'}}>\n                    <Search handleInputChange={this.handleInputChange} handleSearch={this.handleSearch} handleFilters={this.handleFilters} />\n                    {(this.state.query=='')?'':<Cards query={this.state.query} filters={this.state.filters} handleSubmit={this.handleSubmit}/>}\n                    <Graph />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport { Button, Segment } from 'semantic-ui-react';\nimport GoogleLogin from 'react-google-login';\nimport { Redirect } from 'react-router';\nimport clientID from '../config/keys';\n\nclass Login extends React.Component {\n\n  constructor (props){\n    super(props);\n    this.state = {\n      redirect: false,\n    }\n  }\n\n  onSignIn=(response)=>{\n    console.log(\"the response from google sign in\",response);\n    sessionStorage.setItem(\"userName\",response.profileObj.name);\n    sessionStorage.setItem(\"userProfileImage\",response.profileObj.imageUrl);\n    this.setState({\n      redirect: true,\n    })\n    }\n\n  render() {  \n    return (\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', paddingTop: '20%'}}>\n        {/* <Button primary size='massive' href={`/#/dashboard`}>Login</Button> */}\n        {(this.state.redirect)? <Redirect to=\"/home\" />:\n        <GoogleLogin\n                clientId={clientID}\n                buttonText=\"Sign in with Google\"\n                onSuccess={this.onSignIn.bind(this)}\n                onFailure={this.onSignIn.bind(this)}\n                style={{ width: 100 }}\n              />}\n      </div>  \n    );\n  }\n}\n\nexport default Login;\n","/* eslint react/prop-types: 0*/\n/* eslint react/jsx-filename-extension: 0 */\nimport React from 'react';\nimport { Route, Switch, HashRouter } from 'react-router-dom';\nimport App from '../components/App';\nimport Login from '../components/Login'\n\nconst AppRouter = () =>\n(\n    <HashRouter>\n    <div>\n        <Switch>\n            <Route path=\"/\" component={Login} exact={true}/>\n            <Route path=\"/home\" component={App} />\n        </Switch>\n    </div>\n    </HashRouter>\n);\n\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AppRouter from './router/AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}